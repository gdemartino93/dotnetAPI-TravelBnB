@model IEnumerable<ApartmentDTO>
@{
    ViewData["Title"] = "Home Page";
}

<div class="hero">
    <i class="bi bi-arrow-down-circle-fill scrollBtn" id="scrollButton"></i>
</div>
<div class="container">
    <div class="row text-center my-5">
        <h1>Appartamenti disponibili</h1>
    </div>
    <div class="row mt-5 justify-content-around g-3">
        @foreach(var apt in Model)
        {
			<a  class="mycard" asp-controller="Apartment" asp-action="SingleApartment" asp-route-id="@apt.Id">
				<div class="card__head">
					<div class="card__image">
						<img src="@apt.ImageUrl" class="img-fluid">
					</div>
					<div class="card__author">
						<div class="author">
							<img src="@apt.ImageUrl" alt="Author of Tobias Reich" class="author__image">
							<div class="author__content">
								<p class="author__header">TravelBnb</p>
								<p class="author__subheader">L'affittacamere online</p>
							</div>
						</div>
					</div>
				</div>
				<div class="card__body">
					<h2 class="card__headline">@apt.Name</h2>
					<p class="card__text">@apt.Details</p>
				</div>
				<div class="card__foot">
					<span class="card__link">Read more</span>
				</div>
				<div class="card__border"></div>
			</a>

        }
    </div>
</div>
@section Scripts{
   <script>
        $(document).ready(function () {
            $("#scrollButton").click(function () {
                $('html, body').animate({
                    scrollTop: $(".container").offset().top
                }, 800);
            });
        });
		const height = (elem) => {

			return elem.getBoundingClientRect().height

		}

		const distance = (elemA, elemB, prop) => {

			const sizeA = elemA.getBoundingClientRect()[prop]
			const sizeB = elemB.getBoundingClientRect()[prop]

			return sizeB - sizeA

		}

		const factor = (elemA, elemB, prop) => {

			const sizeA = elemA.getBoundingClientRect()[prop]
			const sizeB = elemB.getBoundingClientRect()[prop]

			return sizeB / sizeA

		}

		document.querySelectorAll('.mycard').forEach((elem) => {

			const head = elem.querySelector('.card__head')
			const image = elem.querySelector('.card__image')
			const author = elem.querySelector('.card__author')
			const body = elem.querySelector('.card__body')
			const foot = elem.querySelector('.card__foot')

			elem.onmouseenter = () => {

				elem.classList.add('hover')

				const imageScale = 1 + factor(head, body, 'height')
				image.style.transform = `scale(${imageScale})`

				const bodyDistance = height(foot) * -1
				body.style.transform = `translateY(${bodyDistance}px)`

				const authorDistance = distance(head, author, 'height')
				author.style.transform = `translateY(${authorDistance}px)`

			}

			elem.onmouseleave = () => {

				elem.classList.remove('hover')

				image.style.transform = `none`
				body.style.transform = `none`
				author.style.transform = `none`

			}

		})
   </script>
}